/*
 * function: test type of statement FunctionCall
 * structure:fun=[Variable] "(" ( pars+=Expression ( "," pars+=Expression )* )? ")"
 * type: faulty type
 * testpoint: all expression fit with Fundeclaration
 */
opaque H(q:qubit):unit;


operation syntax_functioncall_test(): unit{

	double a = 1.1;
	
	test1(a);
	
	test2(2, 1.1, (1, true), a);

}

operation test1(a:int):unit{
	
}

operation test2(a:int, b:double, c:(int,bool)):unit{
	
}

operation high(fun: qubit->unit, q2: qubit): unit
{
	fun(2);
	fun(q2, 2);
	q2();
}
 
operation higher(q: qubit, caller: (qubit->unit, qubit) -> unit, callee: qubit->unit): unit
{
	caller(callee);
	caller(q, 2);
}

operation main(): unit
{
	using (q0 : qubit) {
		high(H, q0);
		higher(q0, high, H);
		bool a = measure(q0);
	}
}
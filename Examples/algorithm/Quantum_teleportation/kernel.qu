import config.json.*
import operations.*


operation teleportation(): bool[] {
    bool[2] output;
    using(q : qubit[3]) {
        H(q[0]);
        H(q[1]);
        CNOT(q[1], q[2]);
        CNOT(q[0], q[1]);
        H(q[0]);
        CNOT(q[1], q[2]);
        CZ(q[0], q[2]);
        output[0] = measure(q[0]);
        output[1] = measure(q[1]);
    }
    return output;
}

operation apply_all(gate: qubit -> unit, qubits: qubit[]) : unit {
	int i;
	i = 0;
	int num_qubits;
	num_qubits = qubits.length;
	while (i < num_qubits) {
		gate(qubits[i]);
		i = i + 1;
	}
}
 
operation meas_all(qubits: qubit[]) : bool[] {
	int num_qubits;
	num_qubits = qubits.length;

	bool[num_qubits] res;
	int i;
	i = 0;
	while (i < num_qubits) {
		res[i] = measure(qubits[i]);
		i = i + 1;
	}

	return res;
}

operation init_all(target: qubit[]) : unit {
	apply_all(init, target);
}

operation init(q: qubit) : unit {
    bool a;
    a = measure(q);
    if (a) {
        X(q);
    }
}
import config.jason.*
import operations.*

operation echo_iteration(intervals: int[]): bool[] {
	int K = intervals.length;
	bool[K] result_arr;

	int i = 0;

	using (target: qubit) {
		while(i < K) {
			init(target);

			Rx90(target);
			wait(target, intervals[i]);
			X180(target);
			wait(target, intervals[i]);
			Rx90(target);
	
			result_arr[i] = measure(target);
	
			i = i + 1;
		}
	}
	return result_arr;
} 

//K表示取样点的数目，N表示每个取样点所制备的量子的数目。最终的结果是N * K的二维数组。
operation echo(intervals: int[], N: int): bool[][] {
	int K = intervals.length;
	bool[N][K] results;
	int i = 0;
	while (i < N) {
		results[i] = echo_iteration(intervals);
		i = i + 1;
	}
	return results;
} 

operation main(): bool[][]
{
	// perform the experiment on qubit 0 for 1024 times.
	// How to transfer the intervals to the kernel?
	// support interval has 24 elements
	return echo({1, 2}, 2);
}
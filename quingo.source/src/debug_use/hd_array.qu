operation test_array_write(): (int[], int[][]) {
	int OUT_SIZE = 1;
	int num_qubit = 1;

	int[OUT_SIZE] shape = {100};

	int[OUT_SIZE][] res_1_x;

	for (int i = 0; i < OUT_SIZE; i += 1) {

		// using(q: qubit[num_qubit]) {
		// 	// 1. generate a random value `meas_res` of `num_qubit` bits, and
		// 	// each bit is generated using a QRNG.
		// 	init_all(q);
		// 	apply_all(H, q);
		// 	bool[] meas_res = meas_all(q);

		// 	// 2. store this random value plus 1 in shape[i]
		// 	int pow = 1;
		// 	shape[i] = 1;
		// 	for (int j = 0; j < q.length; j += 1) {
		// 		if (meas_res[j]) {
		// 			shape[i] += pow;
		// 		}
		// 		pow *= 2;
		// 	}
		// }

		// the inner array is from 0 to random value
		int cur_subarray_length = shape[i];
		int[cur_subarray_length] inner_res;
		for (int j = 0; j < cur_subarray_length; j += 1) {
			inner_res[j] = j;
		}

		res_1_x[i] = inner_res;

	}

	return (shape, res_1_x);

}


operation main(): (int[], int[][]) {

return test_array_write();
}